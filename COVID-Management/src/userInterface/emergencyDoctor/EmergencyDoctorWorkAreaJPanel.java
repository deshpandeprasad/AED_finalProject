
package userInterface.emergencyDoctor;



import business.EcoSystem;
import business.common.GetOrganizations;
import business.personpkg.*;
import business.vitalsign.VitalSign;
import business.userAccountpkg.UserAccount;
import business.workQueuepkg.*;
import business.organizationpkg.NurseSchoolOrganization;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

//this is the EmergencyDoctorWorkAreaJPanel
public class EmergencyDoctorWorkAreaJPanel extends javax.swing.JPanel {

    
     private JPanel userProcessContainer;
     private UserAccount userAccount;
     private NurseSchoolOrganization nurseOrg;
        private  EcoSystem ecoSystem;
   
     
    public EmergencyDoctorWorkAreaJPanel(JPanel userProcessContainer, EcoSystem ecoSystem,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem=ecoSystem;
        this.userAccount = userAccount;
       
        populatePatientComboBox();
        getVitalBtn.setEnabled(false);
             sendDetailsBtn.setEnabled(false);
             reportDeathBtn.setEnabled(false);
             sendPatientHomeBtn.setEnabled(false);
             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        patientCmb = new javax.swing.JComboBox();
        getAlertFromHH = new javax.swing.JLabel();
        vitalSignsPanel = new javax.swing.JLayeredPane();
        weight = new javax.swing.JLabel();
        systollicBloodPressure = new javax.swing.JLabel();
        tempTxt = new javax.swing.JTextField();
        heartRate = new javax.swing.JLabel();
        spo2Txt = new javax.swing.JTextField();
        respiratoryRate = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnDetailsBtn = new javax.swing.JButton();
        weight1 = new javax.swing.JLabel();
        weight2 = new javax.swing.JLabel();
        heartRateTxt = new javax.swing.JTextField();
        weight3 = new javax.swing.JLabel();
        coughRbYes = new javax.swing.JRadioButton();
        coughRbNo = new javax.swing.JRadioButton();
        breathRbYes = new javax.swing.JRadioButton();
        breathRbNo = new javax.swing.JRadioButton();
        covidRbYes = new javax.swing.JRadioButton();
        covidRbNo = new javax.swing.JRadioButton();
        lungRbYes = new javax.swing.JRadioButton();
        lungRbNo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        criticalRbYes = new javax.swing.JRadioButton();
        criticalRbNo = new javax.swing.JRadioButton();
        getVitalBtn = new javax.swing.JButton();
        sendDetailsBtn = new javax.swing.JButton();
        sendPatientHomeBtn = new javax.swing.JButton();
        reportDeathBtn = new javax.swing.JButton();
        requestVolBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        patientCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientCmbActionPerformed(evt);
            }
        });
        add(patientCmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 179, -1));

        getAlertFromHH.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        getAlertFromHH.setText("View Patient Covid Vital Signs");
        add(getAlertFromHH, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 18, 407, -1));

        vitalSignsPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        vitalSignsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        weight.setText("Breathing Difficulty");
        vitalSignsPanel.add(weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, -1, -1));

        systollicBloodPressure.setText("Cough Severity");
        vitalSignsPanel.add(systollicBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));
        vitalSignsPanel.add(tempTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 120, -1));

        heartRate.setText("Temperature");
        vitalSignsPanel.add(heartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 90, -1));
        vitalSignsPanel.add(spo2Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 120, -1));

        respiratoryRate.setText("SPO2 Level");
        vitalSignsPanel.add(respiratoryRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setText("Covid Vital Signs");
        vitalSignsPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, -1));

        btnDetailsBtn.setText("Update Details ");
        btnDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsBtnActionPerformed(evt);
            }
        });
        vitalSignsPanel.add(btnDetailsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, 154, -1));

        weight1.setText("Covid Test Result");
        vitalSignsPanel.add(weight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        weight2.setText("Lung Effected");
        vitalSignsPanel.add(weight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, -1, -1));
        vitalSignsPanel.add(heartRateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 280, 140, -1));

        weight3.setText("Heart Rate");
        vitalSignsPanel.add(weight3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, -1, -1));

        buttonGroup1.add(coughRbYes);
        coughRbYes.setText("Yes");
        vitalSignsPanel.add(coughRbYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, -1, -1));

        buttonGroup1.add(coughRbNo);
        coughRbNo.setText("No");
        vitalSignsPanel.add(coughRbNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, -1, -1));

        buttonGroup2.add(breathRbYes);
        breathRbYes.setText("Yes");
        breathRbYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breathRbYesActionPerformed(evt);
            }
        });
        vitalSignsPanel.add(breathRbYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 150, -1, -1));

        buttonGroup2.add(breathRbNo);
        breathRbNo.setText("No");
        vitalSignsPanel.add(breathRbNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 150, -1, -1));

        buttonGroup3.add(covidRbYes);
        covidRbYes.setText("Positive");
        vitalSignsPanel.add(covidRbYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, -1, -1));

        buttonGroup3.add(covidRbNo);
        covidRbNo.setText("Negative");
        vitalSignsPanel.add(covidRbNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, -1, -1));

        buttonGroup4.add(lungRbYes);
        lungRbYes.setText("Yes");
        vitalSignsPanel.add(lungRbYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, -1, -1));

        buttonGroup4.add(lungRbNo);
        lungRbNo.setText("No");
        lungRbNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lungRbNoActionPerformed(evt);
            }
        });
        vitalSignsPanel.add(lungRbNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 210, -1, -1));

        jLabel1.setText("Critical");
        vitalSignsPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 92, -1));

        buttonGroup5.add(criticalRbYes);
        criticalRbYes.setText("Yes");
        vitalSignsPanel.add(criticalRbYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, -1, -1));

        buttonGroup5.add(criticalRbNo);
        criticalRbNo.setText("No");
        criticalRbNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criticalRbNoActionPerformed(evt);
            }
        });
        vitalSignsPanel.add(criticalRbNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 100, -1, -1));

        add(vitalSignsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 840, 460));

        getVitalBtn.setText("Get Vital Sign Data");
        getVitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getVitalBtnActionPerformed(evt);
            }
        });
        add(getVitalBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 178, -1));

        sendDetailsBtn.setText("Send Details to patient");
        sendDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendDetailsBtnActionPerformed(evt);
            }
        });
        add(sendDetailsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, -1, -1));

        sendPatientHomeBtn.setText("Send Patient Home");
        sendPatientHomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendPatientHomeBtnActionPerformed(evt);
            }
        });
        add(sendPatientHomeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, -1, -1));

        reportDeathBtn.setText("Report Death");
        reportDeathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportDeathBtnActionPerformed(evt);
            }
        });
        add(reportDeathBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 150, -1, -1));

        requestVolBtn.setText("Request Volunteer");
        requestVolBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestVolBtnActionPerformed(evt);
            }
        });
        add(requestVolBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/opaque-mask1.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, -3, 1300, 900));
    }// </editor-fold>//GEN-END:initComponents

    private void patientCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientCmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientCmbActionPerformed

    public void populatePatientComboBox()
    {
        patientCmb.removeAllItems();
        
         System.out.println("In populate patient combo box");
         
         for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList())
         {
             
                System.out.println(request.getSender().getRole());
             
         }

        if(userAccount.getWorkQueue().getWorkRequestList().isEmpty())
        {
        JOptionPane.showMessageDialog(null, "Patients did not choose to send data yet!","warning", JOptionPane.WARNING_MESSAGE); 
        
        }
         
           for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList())
         {
             
            if(request.getSender().getRole().toString().equals("PatientRole"))
            {
             getVitalBtn.setEnabled(true);
             sendDetailsBtn.setEnabled(true);
             reportDeathBtn.setEnabled(true);
             sendPatientHomeBtn.setEnabled(true);
             Patient pat = (Patient)request.getSender().getPerson();
             if(!pat.isIsCured()&&!pat.isIsDead())
                patientCmb.addItem(pat);
            }
         
         }

       }
    private void sendDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendDetailsBtnActionPerformed

        
         String patientName = patientCmb.getSelectedItem().toString();

        Patient patObj = null;
        if(patientName.length()>0){
            ArrayList<Patient> pat = PersonDirectory.getPatientList();
             for(Patient pate: pat )
            {  
                if(pate.getName().equals(patientName)){
                    patObj =pate;
                }
                
            }
        }
        
        if(userAccount.getWorkQueue().getWorkRequestList().isEmpty())
        {
            
             JOptionPane.showMessageDialog(null, "No Patients","warning", JOptionPane.WARNING_MESSAGE);
          
        }
        
   for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList())
        {
         Person userName = request.getSender().getPerson();
       if(userName.equals(patObj))
      {
         if(request.getStatus().equalsIgnoreCase("Completed"))
         {
             
             JOptionPane.showMessageDialog(null, "Details sent to patient updated","success", JOptionPane.PLAIN_MESSAGE);
             
         }
         else
         {
          request.setStatus("Completed");
          JOptionPane.showMessageDialog(null, "Details sent","success", JOptionPane.PLAIN_MESSAGE);
         } 
         
       }
     }

    }//GEN-LAST:event_sendDetailsBtnActionPerformed

    private void btnDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsBtnActionPerformed
        String patientName = patientCmb.getSelectedItem().toString();
        if((!criticalRbYes.isSelected()&&!criticalRbNo.isSelected()) || (!lungRbYes.isSelected()&& !lungRbNo.isSelected()) || (!breathRbYes.isSelected()&&!breathRbNo.isSelected())||heartRateTxt.getText().isEmpty())
                {
                    JOptionPane.showMessageDialog(null, "Please Enter all details","warning", JOptionPane.WARNING_MESSAGE);
                }
        Patient patObj = null;
        if(patientName.length()>0){
            ArrayList<Patient> pat = PersonDirectory.getPatientList();
             for(Patient pate: pat )
            {  
                if(pate.getName().equals(patientName)){
                    patObj =pate;
                }
                
            }
        }
        
        boolean cough=false;
        if(coughRbYes.isSelected())
            cough=true;
        
        boolean breath = false;
        if(breathRbYes.isSelected())
            breath = true;
        
        boolean lung = false;
        if(lungRbYes.isSelected())
            lung = true;
        
        boolean critical =false;
        if(criticalRbYes.isSelected())
            critical = true;

        Float spo2= Float.parseFloat(spo2Txt.getText());
        Float temp= Float.parseFloat(tempTxt.getText());
        boolean covid = false;
        if(covidRbYes.isSelected())
            covid = true;
        int heart = Integer.parseInt(heartRateTxt.getText());
        
        patObj.setIsCough(cough);
        patObj.setIsCovid(covid);
        patObj.setTemperature(temp);
        patObj.setSpo2Level(spo2);
        patObj.setIsCritical(critical);
        VitalSign vit = new VitalSign(heart,lung,breath,covid);
        patObj.setVitalSign(vit);
        JOptionPane.showMessageDialog(null, "Patient details updated successfully","success", JOptionPane.PLAIN_MESSAGE);

    }//GEN-LAST:event_btnDetailsBtnActionPerformed

    private void getVitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getVitalBtnActionPerformed

        spo2Txt.setText("");
        tempTxt.setText("");
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        buttonGroup3.clearSelection();
        buttonGroup5.clearSelection();
        buttonGroup4.clearSelection();
        heartRateTxt.setText("");
        vitalSignsPanel.setVisible(true);
        //clear the data first
        String patientName = patientCmb.getSelectedItem().toString();
        Patient patObj = null;
        if(patientName.length()>0){
            ArrayList<Patient> pat = PersonDirectory.getPatientList();
             for(Patient pate: pat )
            {  
                if(pate.getName().equals(patientName)){
                    patObj =pate;
                }
                
            }
        }
        
       
        else
        {
            JOptionPane.showMessageDialog(this, "Please select a row", "warning", JOptionPane.PLAIN_MESSAGE);
        }
        
        VitalSign  vit = patObj.getVitalSign();
        spo2Txt.setText(Float.toString(patObj.getSpo2Level()));
        tempTxt.setText(Float.toString(patObj.getTemperature()));
        if(patObj.isIsCough()){
            coughRbYes.setSelected(true);
        }
        else
            coughRbNo.setSelected(true);
        
        if(patObj.isIsCovid()){
            covidRbYes.setSelected(true);
        }
        else
            covidRbNo.setSelected(true);
        
        if(patObj.isIsCritical()){
            criticalRbYes.setSelected(true);
        }
        else
            criticalRbNo.setSelected(true);
        
        if(vit.getHeartRate()!=-1)
        {
                    if(vit.isIsBreathingDifficulty()){
                   breathRbYes.setSelected(true);
               }
               else
                   breathRbNo.setSelected(true);
                    if(vit.isIsLungsEffected()){
                   lungRbYes.setSelected(true);
               }
               else
                   lungRbNo.setSelected(true);
                    
                heartRateTxt.setText(String.valueOf(vit.getHeartRate()));    
        }

    }//GEN-LAST:event_getVitalBtnActionPerformed

    private void sendPatientHomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendPatientHomeBtnActionPerformed
        // TODO add your handling code here:
        String patientName = patientCmb.getSelectedItem().toString();
        Patient patObj = null;
        if(patientName.length()>0){
            ArrayList<Patient> pat = PersonDirectory.getPatientList();
             for(Patient pate: pat )
            {  
                if(pate.getName().equals(patientName)){
                    patObj =pate;
                }
                
            }
        }
        
        patObj.setIsCured(true);
       
        patObj.setIsCritical(false);
        populatePatientComboBox();
         JOptionPane.showMessageDialog(null, "Patient sent home successfully","success", JOptionPane.PLAIN_MESSAGE);
        
    }//GEN-LAST:event_sendPatientHomeBtnActionPerformed

    private void reportDeathBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportDeathBtnActionPerformed
        // TODO add your handling code here:
         String patientName = patientCmb.getSelectedItem().toString();
        Patient patObj = null;
        if(patientName.length()>0){
            ArrayList<Patient> pat = PersonDirectory.getPatientList();
             for(Patient pate: pat )
            {  
                if(pate.getName().equals(patientName)){
                    patObj =pate;
                }
                
            }
        }
        
        patObj.setIsDead(true);
        
        patObj.setIsCritical(false);
        populatePatientComboBox();
        JOptionPane.showMessageDialog(null, "Reported death","success", JOptionPane.PLAIN_MESSAGE);
        
    }//GEN-LAST:event_reportDeathBtnActionPerformed

    private void requestVolBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestVolBtnActionPerformed
        // TODO add your handling code here:

        try
        {
            
            nurseOrg =  GetOrganizations.getNurseSchoolOrganization(ecoSystem, userAccount);
                   
         NeedNurseWorkRequest needNurseWorkRequest = new NeedNurseWorkRequest();
                needNurseWorkRequest.setMessage("Need Nurse");
                needNurseWorkRequest.setStatus("Sent");
                needNurseWorkRequest.setRequestDate(new Date());
                needNurseWorkRequest.setSender(userAccount);
                
                nurseOrg.getWorkQueue().getWorkRequestList().add(needNurseWorkRequest);
                userAccount.getWorkQueue().getWorkRequestList().add(needNurseWorkRequest);
                
       System.out.println("In Request volunteer button");
       System.out.println("work request of edoc");
       System.out.println(userAccount.getWorkQueue().getWorkRequestList());
       System.out.println("work request of nurse organization");
       System.out.println(nurseOrg.getWorkQueue().getWorkRequestList());
       JOptionPane.showMessageDialog(null, "Requested for volunteer","success", JOptionPane.PLAIN_MESSAGE);
            
       
        }
        catch(NullPointerException e)
        {
          JOptionPane.showMessageDialog(null, "Volunteer Org doesn't exist","success", JOptionPane.WARNING_MESSAGE);
          return;
        }
        
        //nurseOrg =  GetOrganizations.getNurseSchoolOrganization(ecoSystem, userAccount);
               
//         NeedNurseWorkRequest needNurseWorkRequest = new NeedNurseWorkRequest();
//                needNurseWorkRequest.setMessage("Need Nurse");
//                needNurseWorkRequest.setStatus("Sent");
//                needNurseWorkRequest.setRequestDate(new Date());
//                needNurseWorkRequest.setSender(userAccount);
//                
//                nurseOrg.getWorkQueue().getWorkRequestList().add(needNurseWorkRequest);
//                userAccount.getWorkQueue().getWorkRequestList().add(needNurseWorkRequest);
//                
//       System.out.println("In Request volunteer button");
//       System.out.println("work request of edoc");
//       System.out.println(userAccount.getWorkQueue().getWorkRequestList());
//       System.out.println("work request of nurse organization");
//       System.out.println(nurseOrg.getWorkQueue().getWorkRequestList());
//       JOptionPane.showMessageDialog(null, "Requested for volunteer","success", JOptionPane.PLAIN_MESSAGE);
          
    }//GEN-LAST:event_requestVolBtnActionPerformed

    private void criticalRbNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criticalRbNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_criticalRbNoActionPerformed

    private void breathRbYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breathRbYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_breathRbYesActionPerformed

    private void lungRbNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lungRbNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lungRbNoActionPerformed
  
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton breathRbNo;
    private javax.swing.JRadioButton breathRbYes;
    private javax.swing.JButton btnDetailsBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JRadioButton coughRbNo;
    private javax.swing.JRadioButton coughRbYes;
    private javax.swing.JRadioButton covidRbNo;
    private javax.swing.JRadioButton covidRbYes;
    private javax.swing.JRadioButton criticalRbNo;
    private javax.swing.JRadioButton criticalRbYes;
    private javax.swing.JLabel getAlertFromHH;
    private javax.swing.JButton getVitalBtn;
    private javax.swing.JLabel heartRate;
    private javax.swing.JTextField heartRateTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton lungRbNo;
    private javax.swing.JRadioButton lungRbYes;
    private javax.swing.JComboBox patientCmb;
    private javax.swing.JButton reportDeathBtn;
    private javax.swing.JButton requestVolBtn;
    private javax.swing.JLabel respiratoryRate;
    private javax.swing.JButton sendDetailsBtn;
    private javax.swing.JButton sendPatientHomeBtn;
    private javax.swing.JTextField spo2Txt;
    private javax.swing.JLabel systollicBloodPressure;
    private javax.swing.JTextField tempTxt;
    private javax.swing.JLayeredPane vitalSignsPanel;
    private javax.swing.JLabel weight;
    private javax.swing.JLabel weight1;
    private javax.swing.JLabel weight2;
    private javax.swing.JLabel weight3;
    // End of variables declaration//GEN-END:variables

   
}