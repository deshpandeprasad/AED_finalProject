
package userInterface.doctor;

import business.EcoSystem;
import business.common.Medicine;
import business.common.GetOrganizations;
import business.common.TableHeadColors;
import business.organizationpkg.PharmacyOrganization;
import business.userAccountpkg.UserAccount;
import business.workQueuepkg.*;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

//this is the CheckInventoryJPanel
public class CheckInventoryJPanel extends javax.swing.JPanel {

   
    
    private UserAccount userAccount;
     private JPanel userProcessContainer;
      private  EcoSystem ecoSystem;
      private PharmacyOrganization pharmOrg;
    
    
    public CheckInventoryJPanel(JPanel userProcessContainer, EcoSystem ecoSystem, UserAccount userAccount) {
        
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ecoSystem=ecoSystem;
        this.userAccount=userAccount;
        inventoryJTable.getTableHeader().setDefaultRenderer(new TableHeadColors());
        populateinvertoryTable();
        populatepharmacyComboBox();
        
         
         
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryJTable = new javax.swing.JTable();
        orderMedBtn = new javax.swing.JButton();
        medNameTxt = new javax.swing.JTextField();
        medQuanAvailTxt = new javax.swing.JTextField();
        medQuanReqTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addMedBtn = new javax.swing.JButton();
        pharmacyCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Medicines", "Quantity available", "Required"
            }
        ));
        jScrollPane1.setViewportView(inventoryJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 400, 220));

        orderMedBtn.setText("Order");
        orderMedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderMedBtnActionPerformed(evt);
            }
        });
        add(orderMedBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 490, 93, -1));
        add(medNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 200, 116, -1));
        add(medQuanAvailTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 270, 116, -1));
        add(medQuanReqTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 350, 116, -1));

        jLabel1.setText("Medicine Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, 106, -1));

        jLabel2.setText("Quantity available");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 280, 106, -1));

        jLabel3.setText("Quantity Required");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 350, -1, 40));

        addMedBtn.setText("Add Medicine");
        addMedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMedBtnActionPerformed(evt);
            }
        });
        add(addMedBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 490, -1, -1));

        pharmacyCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pharmacyCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacyComboActionPerformed(evt);
            }
        });
        add(pharmacyCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 490, 124, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/opaque-meds.png"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1300, 910));

        jLabel5.setFont(new java.awt.Font("Malayalam MN", 0, 48)); // NOI18N
        jLabel5.setText("Check Inventory");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, -1, -1));

        backJButton.setText("<< back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 730, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addMedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMedBtnActionPerformed
        // TODO add your handling code here:
      if(medNameTxt.getText().isEmpty()||medQuanAvailTxt.getText().isEmpty()||medQuanReqTxt.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "Please Enter all fields", "warning", JOptionPane.WARNING_MESSAGE);
            return;
      }
        String medName = medNameTxt.getText();
        int medAv = Integer.parseInt(medQuanAvailTxt.getText());
        int medReq = Integer.parseInt(medQuanReqTxt.getText());
        Medicine med = new Medicine(medName,medAv,medReq);
        
        
        userAccount.getPerson().getInventory().add(med);
        populateinvertoryTable();
       
    }//GEN-LAST:event_addMedBtnActionPerformed

    private void orderMedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderMedBtnActionPerformed
        // TODO add your handling code here:
        
        int row = inventoryJTable.getSelectedRow();
        if(row<0)
        {JOptionPane.showMessageDialog(null, "Please Select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;}
        
        
        String medName = inventoryJTable.getValueAt(row, 0).toString();
        ArrayList<Medicine> medsList = userAccount.getPerson().getInventory();
        
        Medicine selectedMed = null;
        //change later to sending only required one
        for(Medicine med : medsList){
            if(med.getName().equals(medName))
                selectedMed =  med;
        }
       
        try
        {
        String pharmaName = pharmacyCombo.getSelectedItem().toString();
        UserAccount pharmacyHead= null;
        
        
        for(UserAccount userAcc:pharmOrg.getUserAccountDirectory().getUserAccountList())
            
        {
            if(userAcc.getUserName().equals(pharmaName))
                pharmacyHead =userAcc;
                
        }
        
        NeedMedsWorkRequest needMeds = new NeedMedsWorkRequest();
        needMeds.setMessage("Need Medicines");
        needMeds.setStatus("Sent");
        needMeds.setRequestDate(new Date());
        needMeds.setSender(userAccount);
        needMeds.setMed(selectedMed);
        //adding work request to patient
        userAccount.getWorkQueue().getWorkRequestList().add(needMeds);
        pharmacyHead.getWorkQueue().getWorkRequestList().add(needMeds);
        pharmacyHead.getPerson().getInventory().add(selectedMed);
        JOptionPane.showMessageDialog(null, "Your Order has been created successfully", "success", JOptionPane.PLAIN_MESSAGE);
        }catch(NullPointerException e)
        {
          JOptionPane.showMessageDialog(null, "No Pharmacy heads exist","success", JOptionPane.WARNING_MESSAGE);
          return;
        }

        
    }//GEN-LAST:event_orderMedBtnActionPerformed

    private void pharmacyComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacyComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pharmacyComboActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMedBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable inventoryJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField medNameTxt;
    private javax.swing.JTextField medQuanAvailTxt;
    private javax.swing.JTextField medQuanReqTxt;
    private javax.swing.JButton orderMedBtn;
    private javax.swing.JComboBox<String> pharmacyCombo;
    // End of variables declaration//GEN-END:variables

    private void populateinvertoryTable() {
        DefaultTableModel model = (DefaultTableModel)inventoryJTable.getModel();
        
        


 model.setRowCount(0);
 for(Medicine med : userAccount.getPerson().getInventory()){

       Object[] row = new Object[3];
       row[0] = med.getName();
       row[1]=med.getAvaialableQuantity();
       row[2] =med.getRequiredQuantity();
       model.addRow(row);
 
 }
 }

    private void populatepharmacyComboBox() {
        try
       {
        pharmacyCombo.removeAllItems();
        pharmOrg =  GetOrganizations.getPharmacyOrganization(ecoSystem, userAccount);

        
      
   
       if(pharmOrg!=null)
       {
        if(pharmOrg.getUserAccountDirectory().getUserAccountList().isEmpty())
        {
        JOptionPane.showMessageDialog(null, "No pharmacy exists in our records as of now!","warning", JOptionPane.WARNING_MESSAGE);
         return;    
        }
         pharmacyCombo.removeAllItems();
        for(UserAccount userAccount : pharmOrg.getUserAccountDirectory().getUserAccountList())
        {
            pharmacyCombo.addItem(userAccount.getUserName());
        }   
       }
       }
       catch(NullPointerException exc)
       {
       JOptionPane.showMessageDialog(null, "No pharmacy exists in our records as of now!","warning", JOptionPane.WARNING_MESSAGE);
               
       }
    }
}
