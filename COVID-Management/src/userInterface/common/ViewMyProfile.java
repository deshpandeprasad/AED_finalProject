
package userInterface.common;

import business.common.*;
import business.personpkg.Person;
import business.userAccountpkg.UserAccount;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

//this is the ViewMyProfile
public class ViewMyProfile extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Person person;
    
  
    public ViewMyProfile(JPanel userProcessContainer, UserAccount account) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        person = userAccount.getPerson();
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        userNameTxt.setText(person.getName());
      if(person.getDob()!=null && person.getAddress1()!=null && person.getTown()!=null 
                && person.getZipCode()!=null && person.getEmailId()!=null)
       {
        userDobField.setText(dateFormat.format(person.getDob()));
        addressField.setText(person.getAddress1());
        townField.setText(person.getTown());
        zipCodeField.setText(person.getZipCode());
        emailField.setText(person.getEmailId());
        }
        addInputVerifiers();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Name = new javax.swing.JLabel();
        userNameTxt = new javax.swing.JTextField();
        zipCodeField = new javax.swing.JTextField();
        dateOfBirth = new javax.swing.JLabel();
        occupation = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        occupationField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        emailID = new javax.swing.JLabel();
        town = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        townField = new javax.swing.JTextField();
        zipCode = new javax.swing.JLabel();
        userDobField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        saveJButton = new javax.swing.JButton();
        updateJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Name.setText("Full Name:");
        add(Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 194, -1));

        userNameTxt.setEditable(false);
        userNameTxt.setEnabled(false);
        add(userNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, 184, -1));

        zipCodeField.setEditable(false);
        zipCodeField.setEnabled(false);
        add(zipCodeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 640, 184, -1));

        dateOfBirth.setText("Date Of Birth (MM/DD/YYYY):");
        add(dateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 194, -1));

        occupation.setText("Occupation:");
        add(occupation, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 470, -1, -1));

        address.setText("Address: ");
        add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 194, -1));

        occupationField.setEditable(false);
        occupationField.setEnabled(false);
        add(occupationField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 470, 184, -1));

        addressField.setEditable(false);
        addressField.setEnabled(false);
        add(addressField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 310, 184, -1));

        emailID.setText("Email Address:");
        add(emailID, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 570, 101, -1));

        town.setText("Town/City: ");
        add(town, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 390, -1, -1));

        emailField.setEditable(false);
        emailField.setEnabled(false);
        add(emailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 560, 184, -1));

        townField.setEditable(false);
        townField.setEnabled(false);
        add(townField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 390, 184, -1));

        zipCode.setText("Zip Code:");
        add(zipCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 650, 78, -1));

        userDobField.setEditable(false);
        userDobField.setEnabled(false);
        add(userDobField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 230, 184, -1));

        jLabel6.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        jLabel6.setText("View / Update Profile");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 25, 275, -1));

        backJButton.setText("<< back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 857, -1, -1));

        saveJButton.setText("Save");
        saveJButton.setEnabled(false);
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });
        add(saveJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(489, 857, -1, -1));

        updateJButton.setText("Update");
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });
        add(updateJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 857, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/pd/Desktop/final_images/finalbg.png")); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, -1, 1310, 900));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
       userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
       
    private void addInputVerifiers() {
          
        InputVerifier stringValidation = new StringValidation();
        userNameTxt.setInputVerifier(stringValidation);
        addressField.setInputVerifier(stringValidation);
        townField.setInputVerifier(stringValidation);
        occupationField.setInputVerifier(stringValidation);
       
        InputVerifier dobValidtion = new DOBValidation();
        userDobField.setInputVerifier(dobValidtion);
        
        InputVerifier numberValidation = new NumberValidation();
        zipCodeField.setInputVerifier(numberValidation);
       
        InputVerifier emailValidtion = new EmailValidation();
        emailField.setInputVerifier(emailValidtion);
 
    }
    
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed

        if(userNameTxt.getText()!= null && !userNameTxt.getText().isEmpty() &&
            addressField.getText()!=null && !addressField.getText().isEmpty() &&
            townField.getText()!=null && !townField.getText().isEmpty() &&
            occupationField.getText()!=null && !occupationField.getText().isEmpty() &&
            emailField.getText()!=null && !emailField.getText().isEmpty() &&
            userDobField.getText()!=null && !userDobField.getText().trim().isEmpty() &&
            zipCodeField.getText()!=null && !zipCodeField.getText().trim().isEmpty() )
        {
            try
            {
              DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
              Date dateOfBirthVal  = dateFormat.parse(userDobField.getText()) ;
                int age = GetOrganizations.calculateAge(dateOfBirthVal);
                if(age<=0 )
                {
                    JOptionPane.showMessageDialog(null, "Please enter valid age!","warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                person.setFirstName(userNameTxt.getText());
                person.setAddress1(addressField.getText());
                person.setTown(townField.getText());
                person.setZipCode(zipCodeField.getText());
              
                person.setDob(dateOfBirthVal);
                person.setEmailId(emailField.getText());
                userAccount.setPerson(person);
            }
            catch(NumberFormatException nfe)
            {
                JOptionPane.showMessageDialog(this, "Please Enter valid details", "warning",JOptionPane.WARNING_MESSAGE);
                return;
            }
            catch(ParseException pe)
            {
                JOptionPane.showMessageDialog(this, "Please Enter valid date of birth", "warning",JOptionPane.WARNING_MESSAGE);
                 return;
            }

            
                JOptionPane.showMessageDialog(null, "Your Profile has been updated successfully", "success", JOptionPane.PLAIN_MESSAGE);
                updateJButton.setEnabled(true);
                saveJButton.setEnabled(false);
                userNameTxt.setEnabled(false);
                userDobField.setEnabled(false);
                addressField.setEnabled(false);
                townField.setEnabled(false);
                zipCodeField.setEnabled(false);
                occupationField.setEnabled(false);
                emailField.setEnabled(false);
                
         }
        else
        {
            JOptionPane.showMessageDialog(null, "Please Enter data in all the fields");
        }
    }//GEN-LAST:event_saveJButtonActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed

        userNameTxt.setEnabled(true);
        userDobField.setEnabled(true);
        addressField.setEnabled(true);
        townField.setEnabled(true);
        zipCodeField.setEnabled(true);
        occupationField.setEnabled(true);
        emailField.setEnabled(true);
        saveJButton.setEnabled(true);
        updateJButton.setEnabled(false);
        userNameTxt.setEditable(true);
        userDobField.setEditable(true);
        addressField.setEditable(true);
        townField.setEditable(true);
        zipCodeField.setEditable(true);
        occupationField.setEditable(true);
        emailField.setEditable(true);
    }//GEN-LAST:event_updateJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name;
    private javax.swing.JLabel address;
    private javax.swing.JTextField addressField;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel dateOfBirth;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel occupation;
    private javax.swing.JTextField occupationField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JLabel town;
    private javax.swing.JTextField townField;
    private javax.swing.JButton updateJButton;
    private javax.swing.JFormattedTextField userDobField;
    private javax.swing.JTextField userNameTxt;
    private javax.swing.JLabel zipCode;
    private javax.swing.JTextField zipCodeField;
    // End of variables declaration//GEN-END:variables
}
