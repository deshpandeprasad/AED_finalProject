
package userInterface.SystemAdmin;


import business.EcoSystem;
import business.common.TableHeadColors;
import business.networkpkg.Network;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


//this is the ManageNetworkJPanel part
public class ManageNetworkJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     *
     * Creates new form ManageNetworkJPanel
     */
    public ManageNetworkJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
        networkJTable.getTableHeader().setDefaultRenderer(new TableHeadColors());

        populateNetworkTable();
        populateComboBox();
       
    }

    private void populateNetworkTable() {
        
        DefaultTableModel model = (DefaultTableModel) networkJTable.getModel();
        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            Object[] row = new Object[3];
            row[0] = network.getCountry();
            row[1] = network.getState();
            row[2] = network;
            
            model.addRow(row);
        }
    }
    
    private void populateComboBox()
    {
        countryCmb.removeAllItems();
        countryCmb.addItem("Please select a country");
        countryCmb.addItem("United States");
        countryCmb.addItem("Australia");
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        networkJTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        countryCmb = new javax.swing.JComboBox();
        submitCmb = new javax.swing.JButton();
        statesCmb = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cityCmb = new javax.swing.JComboBox();
        country = new javax.swing.JLabel();
        state = new javax.swing.JLabel();
        city = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        image2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(182, 201, 233));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        networkJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Country", "State", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(networkJTable);
        if (networkJTable.getColumnModel().getColumnCount() > 0) {
            networkJTable.getColumnModel().getColumn(0).setResizable(false);
            networkJTable.getColumnModel().getColumn(1).setResizable(false);
            networkJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 165, 490, 150));

        jLabel4.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        jLabel4.setText("View Network List:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 111, 240, -1));

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 620, 101, -1));

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        countryCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryCmbActionPerformed(evt);
            }
        });

        submitCmb.setText("Add");
        submitCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitCmbActionPerformed(evt);
            }
        });

        statesCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        statesCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statesCmbActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        jLabel2.setText("Add New Network");

        cityCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cityCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityCmbActionPerformed(evt);
            }
        });

        country.setText("Country: ");

        state.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        state.setText("State:");

        city.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        city.setText("City:");

        jLayeredPane1.setLayer(countryCmb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(submitCmb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(statesCmb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cityCmb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(country, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(state, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(city, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(submitCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(state)
                            .addComponent(country)
                            .addComponent(city))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(countryCmb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityCmb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statesCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(country)
                    .addComponent(countryCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(state)
                    .addComponent(statesCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(city)
                    .addComponent(cityCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(submitCmb)
                .addContainerGap())
        );

        add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 310, -1, -1));

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 330, 110, -1));

        jLabel5.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        jLabel5.setText("Manage Networks:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 240, -1));

        image2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finalopaquebg.png"))); // NOI18N
        add(image2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 0, 1300, 900));
    }// </editor-fold>//GEN-END:initComponents

    private void submitCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitCmbActionPerformed
        
        if(countryCmb.getSelectedIndex()<1 || statesCmb.getSelectedIndex()<0 ||
                cityCmb.getSelectedIndex() <0)
        {
            JOptionPane.showMessageDialog(null, "Please select all the values", "warning",JOptionPane.WARNING_MESSAGE);
            
           }
        else
        {
        
        String country = (String)countryCmb.getSelectedItem();
        String state = (String)statesCmb.getSelectedItem();
        String city = (String)cityCmb.getSelectedItem();
        if(!system.getNetworkList().isEmpty())
        {
         for(Network network : system.getNetworkList())
         {
             if(city.equals(network.getCity()))
             {
            JOptionPane.showMessageDialog(null, "Network already exists! ", "warning",JOptionPane.WARNING_MESSAGE);
            return;      
             }
         }
        }
       
        Network network = system.addNetwork();
      
        network.setCountry(country);
        network.setState(state);
        network.setCity(city);

        populateNetworkTable();
        }
    }//GEN-LAST:event_submitCmbActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void countryCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryCmbActionPerformed
        statesCmb.removeAllItems();
        cityCmb.removeAllItems();
        if(countryCmb.getSelectedItem() == "United States")
        {
         statesCmb.addItem("Massachusetts");
         statesCmb.addItem("California");
         }
        else if(countryCmb.getSelectedItem() == "Australia")
        {
        statesCmb.addItem("Victoria");
        statesCmb.addItem("New South Wales");    
        }
    }//GEN-LAST:event_countryCmbActionPerformed

    private void statesCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statesCmbActionPerformed
        cityCmb.removeAllItems();
        if(statesCmb.getSelectedItem() == "Massachusetts")
        {
         cityCmb.addItem("Boston");
         cityCmb.addItem("Cambridge");
         cityCmb.addItem("Salem");
         }
        else if(statesCmb.getSelectedItem() == "California")
        {
        cityCmb.addItem("San Deigo");
        cityCmb.addItem("San Fransisoc");    
        }
        else if(statesCmb.getSelectedItem() == "Victoria")
        {
         cityCmb.addItem("Melbourne");
        }
        else if(statesCmb.getSelectedItem() == "New South Wales")
        {
        cityCmb.addItem("Sydney");
        cityCmb.addItem("New Castle");    
        }
    }//GEN-LAST:event_statesCmbActionPerformed

    private void cityCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityCmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityCmbActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        
        int selectedRow = networkJTable.getSelectedRow();
        if(selectedRow >= 0)
        {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to delete the row ", "warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION)
            {
                Network network = (Network)networkJTable.getValueAt(selectedRow, 2);
                system.deleteNetwork(network);
                populateNetworkTable();
               
            }
        }
        else
            {
                JOptionPane.showMessageDialog(this, "Please select a row", "warning",JOptionPane.PLAIN_MESSAGE);
            }
    }//GEN-LAST:event_deleteBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel city;
    private javax.swing.JComboBox cityCmb;
    private javax.swing.JLabel country;
    private javax.swing.JComboBox countryCmb;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel image2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable networkJTable;
    private javax.swing.JLabel state;
    private javax.swing.JComboBox statesCmb;
    private javax.swing.JButton submitCmb;
    // End of variables declaration//GEN-END:variables
}
