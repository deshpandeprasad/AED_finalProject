
package userInterface.covidHead;

import business.EcoSystem;
import business.common.TableHeadColors;
import business.enterprisepkg.Enterprise;
import business.networkpkg.Network;
import business.organizationpkg.*;
import business.personpkg.Patient;
import business.userAccountpkg.UserAccount;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

//this is the CovidHeadJPanel
public class CovidHeadJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private UserAccount userAccount;
    private CovidOrganization covidOrganization;
    private HashMap<String,Integer> communitydetailsmap;
 
    public CovidHeadJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, EcoSystem ecoSystem ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.userAccount = userAccount;
        this.covidOrganization = (CovidOrganization)organization;
        communityHealthTable.getTableHeader().setDefaultRenderer(new TableHeadColors());
        getPatientData();
        
        
        
    }
    
    public PatientOrganization getPatientOrg()
    {
        PatientOrganization patientOrg = null;
        
        for(Network network : ecoSystem.getNetworkList())
        {
         if(network.equals(userAccount.getNetwork()))
         {
          for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList())
          {
            if(enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Hospital))
            {
            for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
            {
             if(organization instanceof PatientOrganization)
             {
              patientOrg = (PatientOrganization)organization; 
             }
            }
            }
          }
         }
        }
        return patientOrg;
    }
    
    public void getPatientData()
    {
      
        int avgAge = 0;
        
        int covidPat =0;
        int criticalPat =0;
           int curedPat =0;
           int deadPat =0;
        
        PatientOrganization patientOrganization = getPatientOrg();
        
        
       if(patientOrganization.getPersonDirectory().getPatientList().isEmpty()){
    JOptionPane.showMessageDialog(null, "No Ambulance driver exists in our records as of now!","warning", JOptionPane.WARNING_MESSAGE);
    return;
    }
      
       for(Patient patient : patientOrganization.getPersonDirectory().getPatientList())
          {
           
           
              if(patient.isIsCovid()&&!patient.isIsDead()&&!patient.isIsCured())
              {covidPat++;
              
              avgAge+=patient.getAge();
              if(patient.isIsCritical()&&!patient.isIsDead()&&!patient.isIsCured())
                    criticalPat++;
                    
              
              }
              if(patient.isIsCured())
                    curedPat++;
              
              
              if(patient.isIsDead())
                    deadPat++;}
              if(covidPat==0)
                  avgAge=0;
              else
                avgAge=avgAge/covidPat;

                DefaultTableModel model = (DefaultTableModel)communityHealthTable.getModel();
                model.setRowCount(0);
                Object[] rowData = new Object[5];
                rowData[0] = covidPat;
                rowData[1] =avgAge;
                rowData[2] = criticalPat;
                rowData[3] = curedPat;
                rowData[4] = deadPat;
                model.addRow(rowData);

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        communityHealthTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        jLabel6.setText("Covid  Head Work Area");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 29, 279, -1));

        jLabel7.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        jLabel7.setText("Covid Report:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 342, -1));

        communityHealthTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Total Covid Patients", "Average age ", "Total Critical Conditions", "Total Cured", "Total Deaths"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(communityHealthTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 745, 206));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finalopaquebg.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, -3, 1300, 910));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable communityHealthTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
