/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.doctor;

import business.EcoSystem;
import business.common.TableHeadColors;
import business.organizationpkg.*;
import business.userAccountpkg.UserAccount;
import business.workQueuepkg.*;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userInterface.common.ViewMyProfile;
import userInterface.patient.ViewPatientProfile;

//this is the DoctorWorkAreaJPanel
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {
    
        private JPanel userProcessContainer;
        private UserAccount userAccount;
       
         private DoctorOrganization doctorOrganization;
         private PatientOrganization patientOrganization ;
         
         private EcoSystem ecoSystem;
   
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;

        this.userAccount = userAccount;
         this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.userAccount = userAccount;
        this.doctorOrganization = (DoctorOrganization)organization;
        workRequestJTable.getTableHeader().setDefaultRenderer(new TableHeadColors());
        populateWorkRequestTable();
        

        
    }
      public void populateWorkRequestTable()
    {
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request : doctorOrganization.getWorkQueue().getWorkRequestList()){
         
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getPerson().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
            row[3] = request.getStatus();
            row[4] = request.getSender().getRole().toString();
            model.addRow(row);
        }
    }
         public void populateWorkRequestToBeProcessedTable()
    {
      DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request : doctorOrganization.getWorkQueue().getWorkRequestList()){
         if(request.getStatus().equalsIgnoreCase("Sent") || request.getStatus().equalsIgnoreCase("Pending") ||
              request.getStatus().equalsIgnoreCase("Processing")   )
         {
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getPerson().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
            row[3] = request.getStatus();
            
            model.addRow(row);
         }
        }   
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        refreshJButton = new javax.swing.JButton();
        updateDoctorProfile = new javax.swing.JButton();
        viewProfileBtn = new javax.swing.JButton();
        checkInventoryBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        viewReqToBeProcessedBtn = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();
        viewRequestorProfile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 640, 169));

        jLabel6.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        jLabel6.setText("Doctor Head Work Area");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 279, -1));

        jLabel7.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        jLabel7.setText("Work Requests:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 198, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, -1, -1));

        updateDoctorProfile.setText("Create My Profile");
        updateDoctorProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDoctorProfileActionPerformed(evt);
            }
        });
        jPanel1.add(updateDoctorProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 60, 181, -1));

        viewProfileBtn.setText("View My Profile");
        viewProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProfileBtnActionPerformed(evt);
            }
        });
        jPanel1.add(viewProfileBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 181, -1));

        checkInventoryBtn.setText("Check Inventory");
        checkInventoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInventoryBtnActionPerformed(evt);
            }
        });
        jPanel1.add(checkInventoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 100, 181, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finalopaquebg.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 460));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        viewReqToBeProcessedBtn.setText("View Request to be Processed");
        viewReqToBeProcessedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReqToBeProcessedBtnActionPerformed(evt);
            }
        });
        add(viewReqToBeProcessedBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, -1, -1));

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 500, 90, -1));

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 500, -1, -1));

        viewRequestorProfile.setText("View Requestor Profile");
        viewRequestorProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestorProfileActionPerformed(evt);
            }
        });
        add(viewRequestorProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 500, -1, -1));

        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 200, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finalopaquebg.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-8, -3, 1310, 900));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getReceiver()!=null)
        {
            JOptionPane.showMessageDialog(null, "Request has been processed earlier !", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateWorkRequestTable();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DoctorWorkRequest request = (DoctorWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getReceiver() == null)
        {
            JOptionPane.showMessageDialog(null, "Please assign the request first", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(request.getStatus().equalsIgnoreCase("Completed"))
        {
            JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(request.getStatus().equalsIgnoreCase("Processing") ||  request.getStatus().equalsIgnoreCase("Pending"))
        {
            if(request.getReceiver()!=userAccount)
            {
                JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        request.setStatus("Processing");

        DoctorProcessRequestAreaJPanel swrajp = new DoctorProcessRequestAreaJPanel(userProcessContainer, request, ecoSystem,userAccount);
        userProcessContainer.add("processWorkRequestJPanel", swrajp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateWorkRequestTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void updateDoctorProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDoctorProfileActionPerformed
        CreateDoctorProfileJPanel createDoctorProfileJPanel = new CreateDoctorProfileJPanel(userProcessContainer, userAccount);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("CreateDoctorProfileJPanel", createDoctorProfileJPanel);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_updateDoctorProfileActionPerformed

    private void viewReqToBeProcessedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReqToBeProcessedBtnActionPerformed
        populateWorkRequestToBeProcessedTable();
    }//GEN-LAST:event_viewReqToBeProcessedBtnActionPerformed

    private void viewRequestorProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestorProfileActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DoctorWorkRequest request = (DoctorWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        UserAccount ua = request.getSender();

        ViewPatientProfile viewVolunteerProfile = new ViewPatientProfile(userProcessContainer, ua,ecoSystem);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("ViewVolunteerProfile", viewVolunteerProfile);
        layout.next(userProcessContainer);

    }//GEN-LAST:event_viewRequestorProfileActionPerformed

    private void viewProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProfileBtnActionPerformed

        ViewMyProfile viewMyProfile = new ViewMyProfile(userProcessContainer, userAccount);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("ViewMyProfile", viewMyProfile);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewProfileBtnActionPerformed

    private void checkInventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInventoryBtnActionPerformed
        // TODO add your handling code here:
        CheckInventoryJPanel checkinv = new CheckInventoryJPanel(userProcessContainer, ecoSystem,userAccount);
        userProcessContainer.add("processWorkRequestJPanel", checkinv);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_checkInventoryBtnActionPerformed
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton checkInventoryBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton updateDoctorProfile;
    private javax.swing.JButton viewProfileBtn;
    private javax.swing.JButton viewReqToBeProcessedBtn;
    private javax.swing.JButton viewRequestorProfile;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
